# Generated by Django 4.1.7 on 2023-02-18 10:14

import apps.models.file
from django.db import migrations, models
import django.db.models.deletion
import enums.main


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Admin",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("email", models.EmailField(max_length=200, unique=True)),
                ("username", models.CharField(max_length=200, unique=True)),
                ("fullname", models.CharField(max_length=400)),
            ],
            options={"db_table": "admin",},
        ),
        migrations.CreateModel(
            name="Customer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("email", models.EmailField(max_length=200, unique=True)),
                ("username", models.CharField(max_length=200, unique=True)),
                ("fullname", models.CharField(max_length=400)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            (enums.main.CustomerStatusEnum["active"], "active"),
                            (enums.main.CustomerStatusEnum["removed"], "removed"),
                        ],
                        default="active",
                        max_length=10,
                    ),
                ),
            ],
            options={"db_table": "customer",},
        ),
        migrations.CreateModel(
            name="File",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("file_use", models.FileField(upload_to=apps.models.file.upload_file)),
            ],
            options={"db_table": "file",},
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("title", models.CharField(max_length=200)),
                ("price", models.IntegerField()),
                ("description", models.TextField()),
                ("discount_percent", models.IntegerField()),
                ("sales_number", models.IntegerField(default=0)),
                ("inventory_count", models.IntegerField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            (enums.main.ProductStatusEnum["available"], "available"),
                            (enums.main.ProductStatusEnum["expensive"], "expensive"),
                            (
                                enums.main.ProductStatusEnum["inexpensive"],
                                "inexpensive",
                            ),
                        ],
                        default="available",
                        max_length=1,
                    ),
                ),
                ("is_visible", models.BooleanField(default=True)),
            ],
            options={"db_table": "product",},
        ),
        migrations.CreateModel(
            name="ProductProperty",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("label", models.CharField(max_length=200)),
                ("value", models.CharField(max_length=400)),
            ],
            options={"db_table": "product_property",},
        ),
        migrations.AddIndex(
            model_name="productproperty",
            index=models.Index(
                db_tablespace="pk_property",
                fields=["id"],
                name="product_pro_id_330517_idx",
            ),
        ),
        migrations.AddField(
            model_name="product",
            name="properties",
            field=models.ManyToManyField(
                null=True, related_name="properties", to="models.productproperty"
            ),
        ),
        migrations.AddField(
            model_name="file",
            name="product",
            field=models.ForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="image_set",
                to="models.product",
            ),
        ),
        migrations.AddField(
            model_name="customer",
            name="profile_image",
            field=models.OneToOneField(
                null=True, on_delete=django.db.models.deletion.CASCADE, to="models.file"
            ),
        ),
        migrations.AddIndex(
            model_name="admin",
            index=models.Index(
                db_tablespace="pk_admin", fields=["id"], name="admin_id_c0fa98_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="product",
            index=models.Index(
                db_tablespace="pk_product", fields=["id"], name="product_id_a3d46d_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="file",
            index=models.Index(
                db_tablespace="pk_file", fields=["id"], name="file_id_0bdc6e_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="customer",
            index=models.Index(
                db_tablespace="pk_customer",
                fields=["id"],
                name="customer_id_d2b149_idx",
            ),
        ),
    ]
